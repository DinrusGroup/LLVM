module ll.api.PassManager;

import ll.c.Core, ll.c.Types;
import ll.api.Module;
import ll.api.ModuleProvider;
import ll.api.vals.consts.GlobalValues.GlobalObjects.Function;
import ll.c.AllTransforms;
import ll.c.Transforms.IPO: ЛЛДобавьПроходкуГлобДЦЕ;

    public class МенеджерПроходок
    {
        public this()
		{
			this(ЛЛСоздайМенеджерПроходок());
		}

        public this(Модуль м)
		{
			this(ЛЛСоздайМенеджерФукнцПроходокДляМодуля(м.раскрой()));
		}

        public this(МодульПровайдер п)
		{ 
			this(ЛЛСоздайМенеджерФукнцПроходок(п.раскрой()));
		}

        private ЛЛМенеджерПроходок экземпл;

        this(ЛЛМенеджерПроходок мп)
        {
            this.экземпл = мп;
        }

        ~this()
        {
            ЛЛВыместиМенеджерПроходок(this.раскрой());
        }
		
		public ЛЛМенеджерПроходок раскрой()
		{
		return this.экземпл;
		}

        public бул выполни(Модуль m)
		{
			return ЛЛЗапустиМенеджерПроходок(this.раскрой(), m.раскрой());
		}

        public бул инициализуйМПФ()
		{ 
		    return ЛЛИнициализуйМенеджерФукнцПроходок(this.раскрой());
		}

        public бул выполниМПФ(Функция f)
		{
			return ЛЛЗапустиМенеджерФукнцПроходок(this.раскрой(), f.раскрой());
		}

         public бул завершиМПФ()
		{ 
			return ЛЛФинализуйМенеджерФукнцПроходок(this.раскрой());
		}

        public проц вклПродвижАргов()
		{
			ЛЛДобавьПроходкуПродвиженияАргументов(this.раскрой());
		}

        public проц вклМёрджКонстант()
		{
			ЛЛДобавьПроходкуМёрджКонстант(this.раскрой());
		}

        public проц вклИскорененНеиспАргов()
		{
			ЛЛДобавьПроходкуИскорененияНенужныхАргов(this.раскрой());
		}

        public проц вклАтрыФункц() 
		{
			ЛЛДобавьПроходкуАтрибутовФункций(this.раскрой());
		}

        public проц вклИнтайнингФункц()
		{
			ЛЛДобавьПроходкуИнлайнингаФункций(this.раскрой());
		}

        public проц вклИнлайнВсегда()
		{
			ЛЛДобавьПроходкуИнлайнВсегда(this.раскрой());
		}

        public проц вклГлобДЦЕ()
		{
			ЛЛДобавьПроходкуГлобДЦЕ(this.раскрой());
		}

        public проц вклГлобОптимизатор() 
		{ 
			ЛЛДобавьПроходкуГлобОптимизатора(this.раскрой());
		}

        public проц вклПропагКонстант() 
		{ 
			ЛЛДобавьПроходкуПропагацииИПКонстант(this.раскрой());
		}

        public проц вклПрюнЕХ()
		{
			ЛЛДобавьПроходкуПрюнЕХ(this.раскрой());
		}

        public проц вклИПСЦЦ()
		{
			ЛЛДобавьПроходкуИПСЦЦ(this.раскрой());
		}

        public проц вклИнтернализацию(бцел allButMain)
		{
			ЛЛДобавьПроходкуИнтернализации(this.раскрой(), allButMain);
         }


        public проц вклУбратьНеиспПрототипы() 
		{ 
			ЛЛДобавьПроходкуОчисткиНенужныхПрототипов(this.раскрой());
		}

        public проц вклУбратьСимволы()
		{
			ЛЛДобавьПроходкуОчисткиСимволов(this.раскрой());
		}

        public проц вклАгрессивнДЦЕ()
		{
			ЛЛДобавьПроходкуАгрессивДЦЕ(this.раскрой());
		}

        public проц вклРаскладкуИзПредположений()
		{ 
			ЛЛДобавьПроходкуРаскладкаИзАссумпций(this.раскрой());
		}

        public проц вклКФГУпрощения()
		{ 
			ЛЛДобавьПроходкуКФГУпрощения(this.раскрой());
		}

        public проц вклИскорНеиспХран() 
		{ 
			ЛЛДобавьПроходкуУдаленияМёртвыхХранилищ(this.раскрой());
		}

        public проц вклСкаляризатор()
		{ 
			ЛЛДобавьПроходкуСкаляризатора(this.раскрой());
		}

        public проц вклДМЗХ() 
		{ 
			ЛЛДобавьПроходкуМёрдждЛоудСторМоушн(this.раскрой());
		}

        public проц вклГВН() 
		{ 
			ЛЛДобавьПроходкуГВН(this.раскрой());
		}
		
	//	ЛЛДобавьПроходкуНовГВН

        public проц вклУпрощениеПИ() 
		{
			ЛЛДобавьПроходкуИндВарУпрощения(this.раскрой());
		}

        public проц AddInstructionCombiningPass()
		{ 
			ЛЛДобавьПроходкуКомбинированияИнструкций(this.раскрой());
		}

        public проц вклДжампПоточность()
		{ 
			ЛЛДобавьПроходкуДжампПоточности(this.раскрой());
		}

        public проц вклЛИЦМ()
		{
			ЛЛДобавьПроходкуЛИЦМ(this.раскрой());
		}

        public проц вклУдалениеЦиклов() 
		{ 
			ЛЛДобавьПроходкуЛупДелешн(this.раскрой());
		}

        public проц вклИдиомыЦикла()
		{
			ЛЛДобавьПроходкуЛупИдиом(this.раскрой());
		}

        public проц вклВращениеЦикла() 
		{
			ЛЛДобавьПроходкуЛупРотейт(this.раскрой());
		}

        public проц вклРероллЦикла()
		{
			ЛЛДобавьПроходкуЛупРеролл(this.раскрой());
		}

        public проц вклАнроллЦикла()
		{ 
			ЛЛДобавьПроходкуЛупАнролл(this.раскрой());
		}
		
		//ЛЛДобавьПроходкуЛупАнроллЭндДжем

        public проц вклАнсвитчЦикла()
		{
			ЛЛДобавьПроходкуЛупАнСвитч(this.раскрой());
		}
		
		
		//ЛЛДобавьПроходкуЛоверАтомик

        public проц вклОптКопирПам()
		{
			ЛЛДобавьПроходкуКопирПамОпц(this.раскрой());
		}

        public проц вклЧастичнИнлайнБибВыз()
		{
			ЛЛДобавьПроходкуЧастичнИнлайнВызБиб(this.раскрой());
		}

        public проц AddLowerSwitchPass()
		{
			ЛЛДобавьПроходкуЛоверСвитч(this.раскрой());
		}

        public проц AddPromoteMemoryToRegisterPass()
		{
			ЛЛДобавьПроходкуПамятьВРегистр(this.раскрой());
		}

        public проц вклРеассоциацию()
		{
			ЛЛДобавьПроходкуРеассоциации(this.раскрой());
		}

        public проц вклСЦЦП()
		{ 
			ЛЛДобавьПроходкуСЦЦП(this.раскрой());
		}

        public проц AddScalarReplAggregatesPass() 
		{
			ЛЛДобавьПроходкуСкалярРеплАгрегаты(this.раскрой());
		}

        public проц AddScalarReplAggregatesPassSSA()
		{
			ЛЛДобавьССАПроходкиСкалярРеплАгрегаты(this.раскрой());
		}

        public проц AddScalarReplAggregatesPassWithThreshold(int threshold)
		{
			ЛЛДобавьПроходкуСкалярРеплАгрегатыСПорогом(this.раскрой(), threshold);
		}

        public проц AddSimplifyLibCallsPass()
		{ 
			ЛЛДобавьПроходкуУпроститьВызовыБиб(this.раскрой());
		}

        public проц AddTailCallEliminationPass() 
		{
			ЛЛДобавьПроходкуИскоренениеТейлВызовов(this.раскрой());
		}

        public проц AddConstantPropagationPass()
		{ 
			ЛЛДобавьПроходкуПропагацияКонстант(this.раскрой());
		}

        public проц AddDemoteMemoryToRegisterPass() 
		{
			ЛЛДобавьПроходкуДемотПамВРегистр(this.раскрой());
		}

        public проц вклВерификатор() 
		{
			ЛЛДобавьПроходкуВерификатора(this.раскрой());
		}

        public проц AddCorrelatedValuePropagationPass() 
		{
			ЛЛДобавьПроходкуПропагацииКоррелирЗначений(this.раскрой());
		}

        public проц AddEarlyCSEPass()
		{
			ЛЛДобавьПроходкуЁлиЦСЕ(this.раскрой());
		}
		
		//ЛЛДобавьПроходкуЁлиЦСЕПамССА

        public проц AddLowerExpectIntrinsicPass()
		{ 
			ЛЛДобавьПроходкуЛоверЭкпектИнтринсик(this.раскрой());
		}

        public проц AddTypeBasedAliasAnalysisPass()
		{
			ЛЛДобавьПроходкуАнализАлиасаНаОвеТипа(this.раскрой());
		}

        public проц AddScopedNoAliasAAPass()
		{ 
			ЛЛДобавьПроходкуМасштбнБезАлиасАА(this.раскрой());
		}

        public проц вклБазАнализНика()
		{
			ЛЛДобавьПроходкуБазовыйАнализАлиаса(this.раскрой());
		}
		
		//ЛЛДобавьПроходкуУнификацииУзловВыходаИзФункц
/+
        public проц AddBBVectorizePass() 
		{
			LLVM.AddBBVectorizePass(this.раскрой());
		}
+/
        public проц вклВекторизацЦикла()
		{ 
			ЛЛДобавьПроходкуВекторизацЦикла(this.раскрой());
		}

        public проц AddSLPVectorizePass() 
		{
			ЛЛДобавьПроходкуВекторизацСЛП(this.раскрой());
		}

/+
        public override int GetHashCode()
		{
			this.раскрой().GetHashCode();
		}

        public override bool Equals(object obj)
		{
			this.Equals(obj as PassManager);
		}

        public bool Equals(PassManager other) 
		{
			ReferenceEquals(other, null) ? false : this.раскрой() == other.раскрой();
		}

        public static bool operator ==(PassManager op1, PassManager op2)
		{
			ReferenceEquals(op1, null) ? ReferenceEquals(op2, null) : op1.Equals(op2);
		}

        public static bool operator !=(PassManager op1, PassManager op2) 
		{ 
			!(op1 == op2);
		}
		+/
    }