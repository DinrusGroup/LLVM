module ll.api.vals.consts.GlobalValue;

import ll.c.Types;
import ll.c.Core;
import ll.common;
import ll.api.Module;
import ll.api.vals.Constant;

    public class ГлобЗначение : Константа
    {

        private ЛЛЗначение экземпл;

        this (ЛЛЗначение экзэмпл)
		{
            super(экзэмпл);
            this.экземпл = экземпл;        
        }

		public override ЛЛЗначение раскрой()
		{
            return this.экзэмпл;
		}

        public бцел раскладка()
        {
            return ЛЛДайРаскладку(this.раскрой());            
        }

        public проц устРаскладку(бцел байты)
		{
            ЛЛУстРаскладку(this.раскрой(), байты);
		}

        public бул естьБезымяннАдр_ли()
        {
            return cast(бул) ЛЛЕстьБезымянныйАдр(this.раскрой());
        }

       public проц устБезымяннАдр(бул данет)
        {
            ЛЛУстБезымянныйАдр(this.раскрой(),cast(ЛЛБул) данет);
		}

        public ЛЛКлассХранДЛЛ классХранДЛЛ()
        {
            return ЛЛДайКлассХраненияДЛЛ(this.раскрой());
        }

        public проц устКлассХранДЛЛ(ЛЛКлассХранДЛЛ кх)
		{
            ЛЛУстКлассХраненияДЛЛ(this.раскрой(), кх);
		}

        public ЛЛВидимость видимость()
        {
            return ЛЛДайВидимость(this.раскрой());
        }

		public проц видимость(ЛЛВидимость в)
        {
             ЛЛУстВидимость(this.раскрой(), в);
        }

        public ткст секция()
        {
            return вТкст(ЛЛДайСекцию(this.раскрой()));
        }

		public проц секция(ткст ткт)
        {
            ЛЛУстСекцию(this.раскрой(), вТкст0(ткт));
        }

        public ЛЛКомпоновка компоновка()
        {
            return ЛЛДайКомпоновку(this.раскрой());
        }

		public проц компоновка(ЛЛКомпоновка к)
        {
            ЛЛУстКомпоновку(this.раскрой(), к);
         }

        public бул декларация_ли()
		{
			return cast(бул) ЛЛДекларация_ли(this.раскрой());
		}

        public Модуль глобРодитель()
		{ 
			return new Модуль(ЛЛДайГлобРодителя(this.раскрой())); 
		}
    }
