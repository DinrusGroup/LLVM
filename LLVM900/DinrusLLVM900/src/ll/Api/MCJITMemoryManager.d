module ll.api.MCJITMemoryManager;

import ll.c.ExecutionEngine;

/***

extern(C)
{
    //LLVMMemoryManagerAllocateCodeSectionCallback
    alias ббайт* function( ук опак, uintptr_t разм, бцел расклад, бцел идСекц, ткст0 имяСекц) ЛЛОбрвызМенеджерПамРазместиСекциюКода;

    //LLVMMemoryManagerAllocateDataSectionCallback
    alias ббайт* function( ук опак, uintptr_t разм, бцел расклад, бцел идСекц, ткст0 имяСекц, ЛЛБул толькоЧтен_ли)
	ЛЛОбрвызМенеджерПамРазместиСекциюДанных;

    //LLVMMemoryManagerFinalizeMemoryCallback
    alias ЛЛБул function(ук опак, ткст0* ошСооб)
	ЛЛОбрвызМенеджерПамФинализуйПам;

    //LLVMMemoryManagerDestroyCallback
    alias проц function(ук опак)
	ЛЛОбрвызМенеджерПамРазрушь;
}

*/
alias ЛЛОбрвызМенеджерПамРазместиСекциюКода РазместительСекцииКода;
alias ЛЛОбрвызМенеджерПамРазместиСекциюДанных РазместительСекцииДанных;
alias ЛЛОбрвызМенеджерПамФинализуйПам ФинализаторПамяти;
alias ЛЛОбрвызМенеджерПамРазрушь ДеструкторПамяти;

    public class МенеджерПамятиМЦДжИТ
    {
        public this( Объект клиентОбъ,  РазместительСекцииКода рск, РазместительСекцииДанных рсд, ФинализаторПамяти фп, ДеструкторПамяти дп)
        {
			
            this(ЛЛСоздайПростойМенеджерПамМЦДжИТ(cast(ук) клиентОбъ, рск, рсд, фп, дп));
			
            this._рск = рск;
            this._рсд = рсд;
            this._фп = фп;
            this._дп = дп;
           
        }

        private РазместительСекцииКода _рск;
        private РазместительСекцииДанных _рсд;
        private ФинализаторПамяти _фп;
        private ДеструкторПамяти _дп;
		
		private ЛЛМенеджерПамятиМЦДжИТ экземпл;
	
        this(ЛЛМенеджерПамятиМЦДжИТ экземпл) 
		{
			this.экземпл = экземпл;
		}
		
		public ЛЛМенеджерПамятиМЦДжИТ раскрой()
		{
		return this.экземпл;
		}

        ~this()
        {
            ЛЛВыместиМенеджерПамМЦДжИТ(this.раскрой());
        }

    }

