module ll.api.MemoryBuffer;

import ll.c.Core, ll.c.Types;
import ll.api.Module;
import ll.c.BitReader;
import ll.common;

    public class БуфПам
    {
        public this(ткст путь)
        {
		ЛЛБуферПамяти буф;
		ткст0 ош;
		
            if (!ЛЛСоздайБуфПамССодержимымФайла(путь, &буф, &ош))
            {
                throw new Искл(вТкст(ош));
            }

            this(буф);
        }

        public this()
        {
		
		ЛЛБуферПамяти буф;
		ткст0 ош;
		
            if (!ЛЛСоздайБуфПамСоСТДВХО(&буф, &ош))
            {
                throw new Искл(вТкст(ош));
            }

            this(буф);
        }

        public this(ткст вхоДанные, ткст имяБуф, бул нуженНулТерм_ли)
        {
            ткст0 дан = вТкст0(вхоДанные);            
                this(ЛЛСоздайБуфПамСДиапазономПам(&дан, cast(т_мера) вхоДанные.length, вТкст0(имяБуф), нуженНулТерм_ли));
            
        }

        public this(ткст вхоДанные, ткст имяБуф)
        {
            ткст0 дан = вТкст0(вхоДанные);
            {
                this(ЛЛСоздайБуфПамСКопиейДиапазонаПам(&дан,  cast(т_мера) вхоДанные.length, вТкст0(имяБуф)));
            }
        }

        private ЛЛБуферПамяти экземпл;

        this(ЛЛБуферПамяти экзэмпл)
        {
            this.экземпл = экзэмпл;
        }

        public override ЛЛЗначение раскрой()
		{
            return this.экзэмпл;
		}		

        ~this()
        {
                ЛЛВыместиБуферПамяти(this.раскрой());
        }

        public Модуль разбериБиткод()
        {
            ЛЛМодуль мод;
            ткст0 ош;

            if (!ЛЛРазбериБиткод(this.раскрой(), &мод, &ош))
            {
                throw new Искл(вТкст(ош));
            }

            return new Модуль(мод);
        }

        public Модуль модульБиткода()
        {
            ЛЛМодуль мод;
            ткст0 ош;

            if (ЛЛДайБиткодМодуль(this.раскрой(), &мод, &ош))
            {
                throw new Искл(вТкст(ош));
            }

             return new Модуль(мод);
        }
		
    }
