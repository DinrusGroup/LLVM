
module ll.context;

import ll.c.Types, ll.c.Core;
import ll.builder;


class Контекст
{

public:

	this(){
		this.кт = ЛЛКонтекстСоздай();
		//this.гкт = ЛЛДайГлобКонтекст(); 
	}

	~this(){
		ЛЛКонтекстВымести(кт);
	}

	проц устДиагнОбр(ЛЛОбработчикДиагностики обработчик, ук ктДиагн = дайДиагнКонтекст() )
	{

		ЛЛКонтекстУстОбработчикДиагностики(кт,обработчик, ктДиагн);
	}

	ЛЛОбработчикДиагностики дайДиагнОбр()
	{
		return ЛЛКонтекстДайОбработчикДиагностики(кт);
	}

	ук дайДиагнКонтекст()
	{
		return ЛЛКонтекстДайКонтекстДиагностики(кт);
	}

	проц устОбрвызовЖни(ЛЛОбрвызовЖни обрвыз, ук опак)
	{
		ЛЛКонтекстУстОбрвызовЖни(кт, обрвыз, опак);
	}

	бул дайСбросИмёнЗначений()
	{
		return cast(бул) ЛЛКонтекстСбрасыватьИменаЗначений_ли(кт);
	}

	бул устСбросИмёнЗначений(бул данет)
	{
		return cast(бул) ЛЛКонтекстУстСбросИмёнЗначений(кт, cast(ЛЛБул) данет);
	}

	бцел дайИдТипаМД(ткст имя)
	{
		return ЛЛДайИДТипаМДВКонтексте(кт, вТкст0(имя), имя.length+1);
	}

	Построитель постр()
	{
		assert(this.кт !is пусто);
		if(м_постр is пусто)
		{
		м_постр = new Построитель(this.кт);
		}
		return м_постр;

	}

	   	 
/////////////////////////////
private:
	ЛЛКонтекст кт;
	Построитель	м_постр;
	//private ЛЛКонтекст гкт;

}


