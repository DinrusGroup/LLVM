модуль ll.Module;

import stdrus: вТкст0, вТкст;
import ll.c.Types, ll.c.Analysis, ll.c.Core, ll.c.BitWriter;

    public class Модуль
    {
        private ЛЛМодуль экземпляр;

        public this(ткст идМодуля)
        {
            this.экземпляр = ЛЛМодуль_СоздайСИменем(вТкст0(идМодуля));
        }

        public Модуль(ткст идМодуля, ЛЛКонтекст контекст)
        {
            this.экземпляр = ЛЛМодуль_СоздайСИменемВКонтексте(вТкст0(идМодуля), ЛЛКонтекст к);
        }

        this(ЛЛМодуль модуль)
        {
            this.экземпляр = модуль;
        }
        
        public Модуль клонируй()
        {
            return new Модуль(this.экземпляр);
        }

        public проц выместиМодуль()
        {
            ЛЛВыместиМодуль(this.экземпляр);
        }
        
        public ткст дайРаскладкуДанных()
        {
            auto рез = ЛЛДайСтрРаскладкиДанных(this.экземпляр);
			return вТкст(рез);
        }

        public проц устРаскладкуДанных(ткст триада)
        {
           ЛЛУстРаскладкуДанных(this.экземпляр, вТкст0(триада));
        }

        public ткст дайЦель()
        {
            return вТкст(ЛЛДайЦель(this.экземпляр));
        }

        public проц устЦель(ткст триада)
        {
            ЛЛУстЦель(this.экземпляр, вТкст0(триада));
        }

        public проц дамп()
        {
            ЛЛДампМодуля(this.экземпляр);
        }

        public бул выведиВФайл(ткст имяФ, out ткст0 *ошСооб)
        {
            return ЛЛВыведиМодульВФайл(this.экземпляр, вТкст0(имяф), ошСооб);
        }

        public override ткст вТкст()
        {
            ткст0 ткт = ЛЛВыведиМодульВСтроку(this.экземпляр);
            ткст рез = вТкст(ткт);
            ЛЛВыместиСообщение(ткт);
            return рез;
        }

        public проц устИнлайнАсм(ткст асм)
        {
            ЛЛУстИнлайнАсмМодуля(this.экземпляр, вТкст0(асм));
        }

        public ЛЛКонтекст дайКонтекст()
        {
            return ЛЛДайКонтекстМодуля(this.экземпляр);
        }

        public ЛЛТип дайТипПоИмени(ткст имя)
        {
            return ЛЛДайТипПоИмени(this.экземпляр, вТкст0(имя));
        }

        public бцел члоОперандовИмМетадан(ткст имя)
        {
            return ЛЛДайЧлоОперандовИменованныхМетаданных(this.экземпляр, вТкст0(имя));
        }

        public ЛЛЗначение[] операндыИмМетадан(ткст имя)
        {
		 ЛЛЗначение[] приёмник;
         ЛЛДайОперандыИменованныхМетаданных(this.экземпляр, вТкст0(имя), &приёмник);
		 return приёмник;
        }

        public проц добавьОперандИмМетадан(ткст имя, ЛЛЗначение зн)
        {
            ЛЛДобавьОперандИменованныхМетаданных(this.экземпляр, вТкст0(имя), зн);
        }

        public ЛЛЗначение добавьФункц(ткст имя, ЛЛТип типФункц)
        {
            return ЛЛДобавьФункц(this.экземпляр, имя, типФункц);
        }

        public ЛЛЗначение дайИмФункц(ткст имя)
        {
            return ЛЛДайИменованФункц(this.экземпляр, вТкст0(имя));
        }

        public ЛЛЗначение первФункц()
        {
            return ЛЛДайПервФункц(this.экземпляр);
        }

        public ЛЛЗначение последнФункц()
        {
            return ЛЛДайПоследнФункц(this.экземпляр);
        }

        public ЛЛЗначение добавьГлоб(ЛЛТип тип, ткст имя)
        {
            return ЛЛДобавьГлоб(this.экземпляр, тип, вТкст0(имя));
        }

        public ЛЛЗначение добавьГлобВАдрПростр(ЛЛТип тип, ткст имя, бцел ап)
        {
            return ЛЛДобавьГлобВАдрПрострво(this.экземпляр, тип, вТкст0(имя), ап);
        }

        public ЛЛЗначение дайИмГлоб(ткст имя)
        {
            return ЛЛДайИменованныйГлоб(this.экземпляр, вТкст0(имя));
        }

        public ЛЛЗначение дайПервГлоб()
        {
            return ЛЛДайПервыйГлоб(this.экземпляр);
        }

        public ЛЛЗначение дайПоследнГлоб()
        {
            return ЛЛДайПоследнийГлоб(this.экземпляр);
        }

        public ЛЛЗначение добавьНик(ЛЛТип тип, ЛЛЗначение ник, ткст имя)
        {
            return ЛЛДобавьНик(this.экземпляр, тип, ник, вТкст0(имя));
        }

        public ЛЛМодульПровайдер создайПровайдерМодуля()
        {
            return ЛЛСоздайМодульПровайдерДляСущМодуля(this.экземпляр);
        }

        public ЛЛМенеджерПроходок создайМенеджерПроходокФункций()
        {
            return ЛЛСоздайМенеджерФукнцПроходокДляМодуля(this.экземпляр);
        }

        public бул проверьМодуль(ЛЛДействиеВерификатораПриОшибке действ, out ткст0 выхСооб)
        {
            return ЛЛВерифицируйМодуль(this.экземпляр, действ, &выхСооб);
        }

        public цел пишиБиткодВФайл(ткст путь)
        {
            return ЛЛПишиБиткодВФайл(this.экземпляр, вТкст0(путь));
        }

        public цел пишиБиткод_в_ФД(цел фд, цел закрыть_ли, цел небуферированный)
        {
            return ЛЛПишиБиткодВФД(this.экземпляр, фд, @закрыть_ли, небуферированный);
        }

        public цел пишиБиткод_в_ФайлУк(цел фукз)
        {
            return ЛЛПишиБиткодВФайлУк(this.экземпляр, фукз);
        }

        public ЛЛБуферПамяти пишиБиткод_в_БуфПам()
        {
            return ЛЛПишиБиткодВБуфПамяти(this.экземпляр);
        }

    }
